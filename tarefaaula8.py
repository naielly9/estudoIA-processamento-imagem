# -*- coding: utf-8 -*-
"""TarefaAula8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WUNJTkNi1MXDyYPTEij1GYBI34NukQQq

1) Em uma imagem da sua escolha adicione os seguintes ruídos e apresente os resultados: gaussiano e ruído de sal e pimenta, compare o efeito de desfoque via caixa,

a. Ruído Gaussiano

b. Ruído Salt and peppers (Sal e pimenta)

c. Ruído Blur (Borramento)
"""

import numpy as np
import argparse
import cv2
from matplotlib import pyplot as plt
from google.colab import files

from skimage.util import random_noise

img = cv2.imread('/content/sample_data/img1.jpg')

imgrgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
imgNC = cv2.cvtColor(imgrgb, cv2.COLOR_RGB2GRAY)

fig = plt.figure(figsize=(15,20))
ax1 = fig.add_subplot(121)
plt.imshow(imgrgb)
plt.xticks([]), plt.yticks([])
plt.title('RGB')

ax2 = fig.add_subplot(122)
plt.imshow(imgNC,'gray')
plt.xticks([]), plt.yticks([])
plt.title('Niveis de Cinza')
plt.show()

I = imgNC
gauss = random_noise(I, mode='gaussian', seed=None, clip=True)
sp = random_noise(I, mode='s&p', seed=5, clip=True)
blur = cv2.blur(I,(5,5))

fig1 = plt.figure(figsize=(20,50))
ax1 = fig1.add_subplot(131)
plt.imshow(blur,'gray')
plt.xticks([]), plt.yticks([])
plt.title('Ruído Blur')

ax2 = fig1.add_subplot(132)
plt.imshow(gauss,'gray')
plt.xticks([]), plt.yticks([])
plt.title('Ruído Gaussiano')

ax3 = fig1.add_subplot(133)
plt.imshow(sp,'gray')
plt.xticks([]), plt.yticks([])
plt.title('Ruído Salt and peppers')

plt.show()

"""Podemos reparar que o ruído gaussiano foi o que deu melhor destaque a imagem que estamos analisando e o ruído de borramento foi o que deixou a imagem com uma resolução pior para análise."""